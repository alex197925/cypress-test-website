{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-19T14:19:05.755Z",
    "end": "2024-03-19T14:19:08.904Z",
    "duration": 3149,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d655c8e-b70b-446b-ac37-30bed8f809c5",
      "title": "",
      "fullFile": "cypress/e2e/automation-test-store/alias-invoke.cy.js",
      "file": "cypress/e2e/automation-test-store/alias-invoke.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5fbb2b8-9e79-4c08-89bc-06495ded516f",
          "title": "Alias and invoke ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate of total and sale products",
              "fullTitle": "Alias and invoke  Calculate of total and sale products",
              "timedOut": null,
              "duration": 1253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.get(\".thumbnail\")\n//   .as(\"productThumbnail\")\n//   .find(\".oneprice\")\n//   .each(($el, index, $list) => {\n//     cy.log($el.text());\n//   });\n//Create Alias\ncy.get(\".thumbnail\").find(\".oneprice\").invoke(\"text\").as(\"textPrice\");\ncy.get(\".thumbnail\").find(\".pricenew \").invoke(\"text\").as(\"saleItemPrice\");\nlet itemsTotal = 0;\n//use Alias\ncy.get(\"@textPrice\").then($linkText => {\n  // cy.log($linkText);\n  let itemsPriceTotal = 0;\n  let itemPrice = $linkText.split(\"$\");\n  let i;\n  for (let i = 0; i < itemPrice.length; i++) {\n    // cy.log(itemPrice[i]);\n    itemsPriceTotal += Number(itemPrice[i]);\n  }\n  itemsTotal += itemsPriceTotal;\n  // cy.log(\"Non sale price in total:\" + itemsPriceTotal);\n});\ncy.get(\"@saleItemPrice\").then($linkText => {\n  let saleItemsPrice = 0;\n  let saleItemPrice = $linkText.split(\"$\");\n  let i;\n  for (let i = 0; i < saleItemPrice.length; i++) {\n    // cy.log(saleItemPrice[i]);\n    saleItemsPrice += Number(saleItemPrice[i]);\n  }\n  itemsTotal += saleItemsPrice;\n  cy.log(\"Sale price in total:\" + saleItemsPrice);\n}).then(() => {\n  cy.log(\"The total price of all products: \" + itemsTotal);\n  expect(itemsTotal).to.equal(660.5);\n});",
              "err": {},
              "uuid": "87f1e044-732c-48ee-abe8-536162de72fe",
              "parentUUID": "c5fbb2b8-9e79-4c08-89bc-06495ded516f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87f1e044-732c-48ee-abe8-536162de72fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1253,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}